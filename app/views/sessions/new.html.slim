= form_for :session, url: session_path do |f|
  .p(data-controller="validation" data-validation-trim-value="true" data-validation-gender-value="feminine")
    = f.label :email_address, class: "label", data: { validation_target: "label" }
    = f.email_field :email_address, value: email_address_param, class: "input", required: true, data: { validation_target: "input", action: "validation#input", form_type: "other" }, autocomplete: "email"
    .text-red-600(hidden data-validation-target="error")
    .text-gray-600= Faker::Internet.email

  .p(data-controller="password")
    = f.label :password, class: "label", data: { password_target: "label" }
    .flex.gap-2.items-center
      input(hidden autocomplete="username")
      = f.password_field :password, class: "input", value: password_param, required: true, data: { password_target: "input", action: "password#input", form_type: "other" }, autocomplete: "current-password"
      a.p-2.flex.items-center.justify-center(data-password-target="show" data-action="password#show")
        = heroicon "eye"
      a.p-2.flex.items-center.justify-center(hidden data-password-target="hide" data-action="password#hide")
        = heroicon "eye-slash"
    .text-red-600(hidden data-password-target="error")
    .text-gray-600= Faker::Internet.password

  .p= f.submit t(".submit"), class: "button", data: { controller: "bridge--button", bridge__button_title_value: t(".submit") }

.p= link_to t(".register"), new_user_path, class: "underline"
