.name.border-l.border-black.pl-5(data-new-record="#{f.object.new_record?}")
  = f.hidden_field :_destroy

  h2.font-bold.p= t(".name")

  .p(data-controller="validation" data-validation-trim-value="true" data-validation-gender-value="masculine")
    = f.label :given_name, class: "label", data: { validation_target: "label" }
    = f.text_field :given_name, class: "input", required: true, data: { validation_target: "input", action: "validation#input", form_type: "other" }, autocomplete: "given-name"
    .text-red-600(hidden data-validation-target="error")
    .text-gray-600= Faker::Name.first_name

  .p(data-controller="validation" data-validation-trim-value="true" data-validation-gender-value="masculine")
    = f.label :family_name, class: "label", data: { validation_target: "label" }
    = f.text_field :family_name, class: "input", required: true, data: { validation_target: "input", action: "validation#input", form_type: "other" }, autocomplete: "family-name"
    .text-red-600(hidden data-validation-target="error")
    .text-gray-600= Faker::Name.last_name

  .p
    = f.label :primary, class: "label"
    = f.check_box :primary, class: "input"

  - if admin?
    .p
      = f.label :verified, class: "label"
      = f.check_box :verified, class: "input"

  .p
    button.button.button--link(data-action="nested#remove")
      = t(".remove")
