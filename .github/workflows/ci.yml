---
concurrency:
  cancel-in-progress: true
  group: ci
jobs:
  brakeman:
    name: brakeman
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - run: bin/brakeman -A -q --color
  build-image:
    name: build image
    needs:
    - brakeman
    - bundler-audit
    - importmap-audit
    - npm-audit
    - rspec
    - rubocop
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        password: "${{secrets.KAMAL_REGISTRY_PASSWORD}}"
        username: "${{secrets.KAMAL_REGISTRY_USERNAME}}"
    - uses: docker/build-push-action@v5
      with:
        cache-from: type=registry,ref=dorianmariecom/codedorian.com:latest
        cache-to: type=registry,ref=dorianmariecom/codedorian.com:latest,mode=max
        context: "."
        labels: service=codedorian
        platforms: linux/arm64
        push: true
        tags: |
          dorianmariecom/codedorian.com:${{github.sha}}
          dorianmariecom/codedorian.com:latest
  bundler-audit:
    name: bundler audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - run: bin/bundler-audit check --update
  deploy-production:
    env:
      BASE_URL: "${{secrets.PRODUCTION_BASE_URL}}"
      CODE_ENV: "${{secrets.PRODUCTION_CODE_ENV}}"
      DATABASE_URL: "${{secrets.PRODUCTION_DATABASE_URL}}"
      HOST: "${{secrets.PRODUCTION_HOST}}"
      HOSTS: "${{secrets.PRODUCTION_HOSTS}}"
      KAMAL_REGISTRY_PASSWORD: "${{secrets.PRODUCTION_KAMAL_REGISTRY_PASSWORD}}"
      KAMAL_REGISTRY_USERNAME: "${{secrets.PRODUCTION_KAMAL_REGISTRY_USERNAME}}"
      RAILS_ENV: "${{secrets.PRODUCTION_RAILS_ENV}}"
      RAILS_MASTER_KEY: "${{secrets.PRODUCTION_RAILS_MASTER_KEY}}"
      SSH_PRIVATE_KEY: "${{secrets.PRODUCTION_SSH_PRIVATE_KEY}}"
    name: deploy production
    needs:
    - build-image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - run: env > .kamal/secrets.production
    - uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: "${{secrets.PRODUCTION_SSH_PRIVATE_KEY}}"
    - if: github.ref == 'refs/heads/main'
      run: bin/kamal lock release --destination production
    - if: github.ref == 'refs/heads/main'
      run: bin/kamal deploy --skip-push --destination production
  deploy-staging:
    env:
      BASE_URL: "${{secrets.STAGING_BASE_URL}}"
      CODE_ENV: "${{secrets.STAGING_CODE_ENV}}"
      DATABASE_URL: "${{secrets.STAGING_DATABASE_URL}}"
      HOST: "${{secrets.STAGING_HOST}}"
      HOSTS: "${{secrets.STAGING_HOSTS}}"
      KAMAL_REGISTRY_PASSWORD: "${{secrets.STAGING_KAMAL_REGISTRY_PASSWORD}}"
      KAMAL_REGISTRY_USERNAME: "${{secrets.STAGING_KAMAL_REGISTRY_USERNAME}}"
      RAILS_ENV: "${{secrets.STAGING_RAILS_ENV}}"
      RAILS_MASTER_KEY: "${{secrets.STAGING_RAILS_MASTER_KEY}}"
      SSH_PRIVATE_KEY: "${{secrets.STAGING_SSH_PRIVATE_KEY}}"
    name: deploy staging
    needs:
    - build-image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: "${{secrets.STAGING_SSH_PRIVATE_KEY}}"
    - run: env > .kamal/secrets.staging
    - if: github.ref == 'refs/heads/main'
      run: bin/kamal lock release --destination staging
    - if: github.ref == 'refs/heads/main'
      run: bin/kamal deploy --skip-push --destination staging
  importmap-audit:
    name: importmap audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - run: bin/importmap audit
  npm-audit:
    name: npm audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v5
    - run: npm audit
  rspec:
    env:
      PGHOST: localhost
      PGPASSWORD: password
      PGUSER: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      RAILS_ENV: test
      RAILS_MASTER_KEY: "${{secrets.TEST_RAILS_MASTER_KEY}}"
    name: rspec
    runs-on: ubuntu-latest
    services:
      postgres:
        env:
          PGHOST: localhost
          PGPASSWORD: password
          PGUSER: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          RAILS_ENV: test
        image: postgres:latest
        ports:
        - 5432:5432
    steps:
    - uses: actions/checkout@v5
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - uses: actions/setup-node@v5
      with:
        cache: npm
    - run: npm install --frozen-lockfile --immutable --ignore-engines
    - run: bin/rails db:create db:schema:load
    - run: bin/rails assets:precompile
    - run: bin/rspec
  rubocop:
    name: rubocop
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - run: bin/rubocop
name: ci
'on': push
